export default [
  {
    id: "q1",
    text: "다음 정의 중 React.js를 가장 잘 설명하는 것은 무엇인가요?",
    answers: [
      "선언형 코드를 사용하여 사용자 인터페이스를 구축하기 위한 라이브러리",
      "웹 애플리케이션에서 상태를 관리하기 위한 라이브러리",
      "명령형 코드를 사용하여 사용자 인터페이스를 구축하기 위한 프레임워크",
      "모바일 애플리케이션을 구축하는 데에만 사용되는 라이브러리",
    ],
  },
  {
    id: "q2",
    text: "React 훅은 어떤 목적을 가지고 있나요?",
    answers: [
      "함수형 컴포넌트에서 상태 및 기타 React 기능을 사용할 수 있도록 지원합니다.",
      "React 애플리케이션에서 반응형 레이아웃을 생성합니다.",
      "애플리케이션 내에서 오류를 처리합니다.",
      "전역 상태 관리를 위한 Redux 라이브러리의 일부입니다.",
    ],
  },
  {
    id: "q3",
    text: "JSX가 무엇인지 알 수 있나요?",
    answers: [
      "JavaScript에 HTML과 유사한 문법을 추가하는 JavaScript 확장입니다.",
      "동적 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.",
      "React를 위해 명시적으로 생성된 특정 HTML 버전입니다.",
      "React 애플리케이션에서 HTTP 요청을 수행하기 위한 도구입니다.",
    ],
  },
  {
    id: "q4",
    text: "React에서 컴포넌트를 생성하는 가장 일반적인 방법은 무엇인가요?",
    answers: [
      "렌더링 가능한 값을 반환하는 JavaScript 함수를 정의함으로써",
      "JavaScript에서 사용자 정의 HTML 태그를 정의함으로써",
      ".jsx 확장자를 가진 파일을 생성함으로써",
      '컴포넌트 이름 앞에 "new" 키워드를 사용함으로써',
    ],
  },
  {
    id: "q5",
    text: "'React state'라는 용어는 무엇을 의미하나요?",
    answers: [
      "컴포넌트 내에서 값을 저장하며 변경 시 컴포넌트를 다시 렌더링할 수 있는 객체",
      "React 컴포넌트가 속한 생명주기 단계",
      "모든 props와 컴포넌트를 포함한 React 애플리케이션의 전체 상태",
      "React 애플리케이션에서 전역 상태를 관리하기 위한 라이브러리",
    ],
  },
  {
    id: "q6",
    text: "React 앱에서 리스트 콘텐츠를 보통 어떻게 렌더링하나요?",
    answers: [
      "map() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환함으로써",
      "for() 루프를 사용하여 데이터 배열을 순회하고 JSX를 반환함으로써",
      "forEach() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환함으로써",
      "loop() 메서드를 사용하여 데이터 배열을 순회하고 JSX를 반환함으로써",
    ],
  },
  {
    id: "q7",
    text: "어떤 방법이 조건부로 콘텐츠를 렌더링하는 데 사용될 수 없는가?",
    answers: [
      "#if 템플릿 문법을 사용하여",
      "삼항 연산자를 사용하여",
      "&& 연산자를 사용하여",
      "if-else 문을 사용하여",
    ],
  },
];
